(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{414:function(t,e,a){"use strict";a.r(e);var s=a(11),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"best-practices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#best-practices"}},[t._v("#")]),t._v(" Best Practices")]),t._v(" "),a("p",[t._v("If this page doesn't answer your question, please feel free to open an issue "),a("a",{attrs:{href:"https://github.com/MetaMask/metamask-mobile",target:"_blank",rel:"noopener noreferrer"}},[t._v("in our repository"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"the-provider-window-ethereum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-provider-window-ethereum"}},[t._v("#")]),t._v(" The Provider (window.ethereum)")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Recent Breaking Provider Changes")]),t._v(" "),a("p",[t._v("If you are an Ethereum application developer and are looking for information about our January 2021 provider API changes,\nplease see our "),a("RouterLink",{attrs:{to:"/guide/provider-migration.html"}},[t._v("Migration Guide")]),t._v(" for more details.")],1)]),t._v(" "),a("p",[t._v("The "),a("RouterLink",{attrs:{to:"/guide/ethereum-provider.html"}},[t._v("provider API")]),t._v(" is the same for both MetaMask Mobile and the desktop extension.\nHowever, the providers become available (i.e., are injected into the page) at different points in the page lifecycle.")],1),t._v(" "),a("h3",{attrs:{id:"provider-availability"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#provider-availability"}},[t._v("#")]),t._v(" Provider Availability")]),t._v(" "),a("p",[t._v("If you use "),a("a",{attrs:{href:"https://npmjs.com/package/@metamask/detect-provider",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("@metamask/detect-provider")]),a("OutboundLink")],1),t._v(", there's nothing to worry about; it will reliably detect both the mobile and extension provider.")]),t._v(" "),a("p",[t._v("If you don't use the "),a("code",[t._v("detect-provider")]),t._v(" package, you have to detect the mobile provider manually.")]),t._v(" "),a("p",[t._v("The extension provider will always be available by the time your code is executed.\nBecause of platform limitations, the mobile provider may not be injected until later in the page lifecycle.\nFor this purpose, the MetaMask provider dispatches the event "),a("code",[t._v("ethereum#initialized")]),t._v(" on "),a("code",[t._v("window")]),t._v(" when it is fully initialized.")]),t._v(" "),a("p",[t._v("You can reliably detect both the mobile and extension provider with the following snippet.")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ethereum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEthereum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ethereum#initialized'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleEthereum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    once"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If the event is not dispatched by the end of the timeout,")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the user probably doesn't have MetaMask installed.")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("handleEthereum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3 seconds")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleEthereum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ethereum "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ethereum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ethereum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isMetaMask"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Ethereum successfully detected!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Access the decentralized web!")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Please install MetaMask!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"using-walletconnect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-walletconnect"}},[t._v("#")]),t._v(" Using WalletConnect")]),t._v(" "),a("p",[t._v("With WalletConnect, you can use MetaMask Mobile as a signer while using applications on another browser, desktop, or mobile application.\nCheck out the "),a("a",{attrs:{href:"https://docs.walletconnect.org/mobile-linking",target:"_blank",rel:"noopener noreferrer"}},[t._v("WalletConnect mobile linking docs"),a("OutboundLink")],1),t._v(" for more info.")]),t._v(" "),a("h2",{attrs:{id:"deeplinking"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deeplinking"}},[t._v("#")]),t._v(" Deeplinking")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://metamask.github.io/metamask-deeplinks/#",target:"_blank",rel:"noopener noreferrer"}},[t._v("Click here to create deeplinks for your application."),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("Deeplinks enable instant invocation of the user's preferred wallet application with correctly parameterized transactions.")]),t._v(" "),a("p",[t._v("Only the (authenticated) user can confirm the transaction, and the wallet can be a web, mobile or desktop app.")]),t._v(" "),a("p",[t._v("URLs embedded in QR codes, hyperlinks in web pages, emails, or chat messages enable robust, cross-application signaling between otherwise loosely coupled applications.")]),t._v(" "),a("p",[t._v("You can use deeplinks for things like:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Creating a URL so your users can open your app directly in MetaMask Mobile to interact with your application with their Ethereum account.")])]),t._v(" "),a("li",[a("p",[t._v("Providing a one-click experience such that users can easily make payments to another account (with pre-filled parameters like recipient address, amount, network, etc.)")])]),t._v(" "),a("li",[a("p",[t._v("Let your users make gasless and instant transactions with Connext payment channel requests")]),t._v(" "),a("ul",[a("li",[t._v("This requires that the user opts in for the InstaPay experimental feature.")])])])]),t._v(" "),a("h2",{attrs:{id:"website-testing-and-debugging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#website-testing-and-debugging"}},[t._v("#")]),t._v(" Website Testing and Debugging")]),t._v(" "),a("p",[t._v("Test and debug your web3 site using MetaMask Mobile on any iOS or Android device with ease.")]),t._v(" "),a("h3",{attrs:{id:"testing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#testing"}},[t._v("#")]),t._v(" Testing")]),t._v(" "),a("ol",[a("li",[t._v("Configure your development server to run on your host machine's local IP address "),a("code",[t._v("192.168.x.x")]),t._v(", or "),a("code",[t._v("0.0.0.0")]),t._v(".")]),t._v(" "),a("li",[t._v("Make sure your testing device is using the same WiFi connection as the machine hosting the server.")]),t._v(" "),a("li",[t._v("In the MetaMask Mobile web browser, navigate to your website at "),a("code",[t._v("http://YOUR_LOCAL_IP:PORT")]),t._v(".")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),a("p",[t._v("If you're using an Android device, you must use "),a("code",[t._v("xip")]),t._v(" in your url. Example: "),a("code",[t._v("http://192.168.x.x.xip.io:8000")])])]),t._v(" "),a("h3",{attrs:{id:"debugging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debugging"}},[t._v("#")]),t._v(" Debugging")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Important")]),t._v(" "),a("p",[t._v("For security purposes, web browser debugging on both iOS and Android will not work if the app was downloaded through the Apple App Store or Google Play Store.\nYou must build the app locally from "),a("a",{attrs:{href:"https://github.com/MetaMask/metamask-mobile",target:"_blank",rel:"noopener noreferrer"}},[t._v("MetaMask Mobile repository"),a("OutboundLink")],1),t._v(" and run it on a simulator or physical device.")])]),t._v(" "),a("h4",{attrs:{id:"ios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ios"}},[t._v("#")]),t._v(" iOS")]),t._v(" "),a("ol",[a("li",[t._v("Open "),a("strong",[t._v("Safari Preferences")]),t._v(" -> "),a("strong",[t._v("Advanced")]),t._v(" -> enable the "),a("strong",[t._v("Show Develop menu in menu bar")]),t._v(" checkbox")]),t._v(" "),a("li",[t._v("Open MetaMask Mobile in an iOS simulator or iOS device")]),t._v(" "),a("li",[t._v("In the Safari menu bar -> "),a("strong",[t._v("Develop")]),t._v(" -> "),a("strong",[t._v("[device name]")]),t._v(" -> "),a("strong",[t._v("[app name]")]),t._v(" -> "),a("strong",[t._v("[url - title]")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),a("p",[t._v("When debugging on a physical device, you must enable Web Inspector in your device's settings:")]),t._v(" "),a("p",[a("strong",[t._v("Settings")]),t._v(" -> "),a("strong",[t._v("Safari")]),t._v(" -> "),a("strong",[t._v("Advanced")]),t._v(" -> "),a("strong",[t._v("Web Inspector")])])]),t._v(" "),a("h4",{attrs:{id:"android"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#android"}},[t._v("#")]),t._v(" Android")]),t._v(" "),a("ol",[a("li",[t._v("Open MetaMask Mobile in an Android emulator or Android device")]),t._v(" "),a("li",[t._v("Open Google Chrome's DevTools -> menu (3 dots) -> "),a("strong",[t._v("More tools")]),t._v(" -> "),a("strong",[t._v("Remote devices")]),t._v("\nYou may also navigate to "),a("code",[t._v("chrome://inspect")]),t._v(" from Chrome to display the list of available devices for debugging")]),t._v(" "),a("li",[t._v("Select your device on the left and click "),a("strong",[t._v("Inspect")]),t._v(" on the browser contents you'd like to inspect.")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Tip")]),t._v(" "),a("p",[t._v("When debugging on a physical device you must enable USB debugging in your device's settings:")]),t._v(" "),a("p",[a("strong",[t._v("Settings")]),t._v(" -> "),a("strong",[t._v("System")]),t._v(" -> "),a("strong",[t._v("About Phone")]),t._v(" -> "),a("strong",[t._v("Developer options")]),t._v(" -> "),a("strong",[t._v("Enable USB debugging")])])]),t._v(" "),a("p",[t._v("You can now debug MetaMask Mobile's browser contents just as you would on the web!")])])}),[],!1,null,null,null);e.default=n.exports}}]);